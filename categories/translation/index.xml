<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>translation on Hi, I'm Vimiix</title><link>http://www.vimiix.com/vimiix-blog/categories/translation/</link><description>Recent content in translation on Hi, I'm Vimiix</description><generator>Hugo -- gohugo.io</generator><language>cn-zh</language><copyright>Copyright (c) 2017-2021, Vimiix Yao; All rights reserved</copyright><lastBuildDate>Fri, 21 Feb 2020 16:22:48 +0000</lastBuildDate><atom:link href="http://www.vimiix.com/vimiix-blog/categories/translation/index.xml" rel="self" type="application/rss+xml"/><item><title>[译]Richardson成熟度模型</title><link>http://www.vimiix.com/vimiix-blog/posts/2020-02-21-richardson-model/</link><pubDate>Fri, 21 Feb 2020 16:22:48 +0000</pubDate><guid>http://www.vimiix.com/vimiix-blog/posts/2020-02-21-richardson-model/</guid><description>&lt;blockquote>
&lt;p>原文链接：&lt;a href="https://martinfowler.com/articles/richardsonMaturityModel.html">https://martinfowler.com/articles/richardsonMaturityModel.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="迈向-rest-的荣耀之巅">迈向 REST 的荣耀之巅&lt;/h3>
&lt;p>Leonard Richardson 提出的一个模型，将实现 REST 方法的主要元素分解为三个步骤，分别包括：资源（Resources）、HTTP 动词(HTTP Verbs，如&lt;code>GET&lt;/code>、&lt;code>POST&lt;/code>等)和超媒体控制（Hypermedia Controls）。&lt;/p>
&lt;p>在&lt;a href="https://www.amazon.cn/dp/0596805829/ref=sr_1_1?ie=UTF8&amp;amp;qid=1551228104&amp;amp;sr=8-1&amp;amp;keywords=REST+in+Practice">Rest In Practice&lt;/a>一书中，解释了如何使用 Restful Web Service 来处理企业面临的许多集成问题。本书的核心观点是，Web 就是一个大规模可扩展的分布式系统存在、并可以很好的工作的证明，而我们可以根据这一观点更容易地构建集成系统。&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="https://static.vimiix.com/uPic/2021-04-06/5hdvom.png" alt="" />
&lt;/figure>
&lt;/p></description></item><item><title>[译]实践出真知</title><link>http://www.vimiix.com/vimiix-blog/posts/2018-10-10-dont-just-learn-a-new-language-framework-implement-it-as-a-running-open-source-project/</link><pubDate>Wed, 10 Oct 2018 23:22:48 +0000</pubDate><guid>http://www.vimiix.com/vimiix-blog/posts/2018-10-10-dont-just-learn-a-new-language-framework-implement-it-as-a-running-open-source-project/</guid><description>&lt;p>Aristotle（亚里士多德），希腊著名的哲学家和科学家，曾经说过：“对于那些我们在能做到之前必须学习如何做的事情，我们需要边做边学 (&lt;em>For the things we have to learn before we can do them, we learn by doing them.&lt;/em>)”。想象一下，假如你已经读过 3 本关于骑行的书了，然后有人给你一辆自行车并让你骑它，你能骑吗？很显然，答案是“不能”。这无关乎你曾经读了多少关于骑行的书或你看了多少相关视频的事情。它需要你真正骑上一辆自行车，去保持平衡，去学习脚，手和眼睛的协调配合才能掌握的一件事情。学习新技术，新语言或框架同样也是如此。&lt;/p>
&lt;p>如果现在你在想：我都不会某个语言或某个框架，我要怎么去实现这个开源项目呢，那么先停止抱怨。也许你是技术或编程的新手，但你需要知道如何去学习新事物。学习新东西的最好方法就是实践。这篇文章将重点关注普适通用的方法。它会帮助你从我想要学习&amp;rsquo;X&amp;rsquo;到我有一个项目在&amp;rsquo;X&amp;rsquo;运行，所以继续往下看。如果你决定通过做一个项目来学习新东西，那就把它开源吧。Github 是托管你的开源项目的首选服务商。在其上你可以享受很多的免费服务。这篇文章的编写主要面向编程起步者，但对于经验丰富的软件工程师也同样有用。&lt;/p></description></item><item><title>[译]python中的global和nonlocal的实践</title><link>http://www.vimiix.com/vimiix-blog/posts/2017-12-14-global-and-nonlocal-variable-in-python/</link><pubDate>Thu, 14 Dec 2017 18:51:48 +0000</pubDate><guid>http://www.vimiix.com/vimiix-blog/posts/2017-12-14-global-and-nonlocal-variable-in-python/</guid><description>&lt;blockquote>
&lt;p>今天的博文翻译是关于 python 中 global 和 nonlocal 两个关键字的用法，原文的作者是来自孟加拉国的&lt;a href="https://twitter.com/subeen">Tamim Shahriar&lt;/a>，他的&lt;a href="http://love-python.blogspot.com.br/?view=classic">博客&lt;/a>非常适合新手朋友去阅读，都是简短而有意义的 python 实践。&lt;/p>
&lt;/blockquote>
&lt;p>我们大多数人都对 Python 中的全局变量很熟悉了。如果我们在一个模块中声明全局变量，模块内部的任何函数都可以访问这个全局变量。（模块可以理解为一个&lt;code>python&lt;/code>文件或&lt;code>.py&lt;/code>文件）&lt;/p></description></item><item><title>[译]Python的enumerate()函数揭秘</title><link>http://www.vimiix.com/vimiix-blog/posts/2017-12-13-pythons-enumerate-function-demystified/</link><pubDate>Wed, 13 Dec 2017 19:51:48 +0000</pubDate><guid>http://www.vimiix.com/vimiix-blog/posts/2017-12-13-pythons-enumerate-function-demystified/</guid><description>&lt;blockquote>
&lt;p>今天的原文的作者是来自国外的一位 Python“布道师”&lt;a href="https://dbader.org">Dan Bader&lt;/a>，他的博客完全就是一个个人品牌的学校。有跟多 Python 技巧，有很多他录制的 Youtube 视频，国内的 Pythonista 们，不妨订阅一下他的每周邮件推送。&lt;a href="https://www.getdrip.com/forms/80014959/submissions/new">订阅链接&lt;/a>&lt;/p>
&lt;p>今天的译文是他博客中的一篇，点击&lt;a href="https://dbader.org/blog/python-enumerate">查看原文&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>如何以去写以及为什么你应该使用 Python 中的内置枚举函数来编写更干净更加 Pythonic 的循环语句？&lt;/p></description></item><item><title>[译]编码，编码，编码!提高编程技能的唯一途径</title><link>http://www.vimiix.com/vimiix-blog/posts/2017-12-12-code-code-code/</link><pubDate>Tue, 12 Dec 2017 20:51:48 +0000</pubDate><guid>http://www.vimiix.com/vimiix-blog/posts/2017-12-12-code-code-code/</guid><description>&lt;blockquote>
&lt;p>最近博客没什么更新。工作上新项目马上要开始了，我很清楚自己的技术积累很匮乏，需要学习的东西太多了，但又不知该从何学起。以前听过一句话，不知道怎么规划学习的时候，只管学就好了。最近家里也储备了一批的新书，都还没来得及看，所以暂时不想怎么规划博客了，接下来到过年的这两个月，博客的文章将都是国外博客的译文，希望可以学习大神经验的同时提升自己的英文水平。&lt;/p>
&lt;p>今天是第一篇，来自前美国宇航局工程师，python 大神&lt;a href="https://github.com/pydanny">Daniel Roy Greenfeld&lt;/a>的博客中的一篇&lt;a href="https://www.pydanny.com/code-code-code.html">《code,code,code》&lt;/a>,旨在帮助新手程序员知道如何才能提高自己的编程技能。&lt;/p>
&lt;/blockquote></description></item><item><title>[译]Python3:变量注释</title><link>http://www.vimiix.com/vimiix-blog/posts/2017-11-02-python3-variable-annotation/</link><pubDate>Thu, 02 Nov 2017 13:12:48 +0000</pubDate><guid>http://www.vimiix.com/vimiix-blog/posts/2017-11-02-python3-variable-annotation/</guid><description>&lt;p>Python 在 3.6 版中添加了一个叫做&lt;strong>变量注释&lt;/strong>的语法。变量注释简单讲就是对于类型提示的增强，这个概念是在 Python3.5 中开始引入的。变量注释的完整解释在&lt;a href="https://www.python.org/dev/peps/pep-0526">PEP 526&lt;/a>中进行了详细说明。在本文中，我们将将要的回顾一下类型提示，然后再介绍新的变量注释语法。&lt;/p></description></item></channel></rss>