<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MQ on Hi, I'm Vimiix</title><link>https://www.vimiix.com/tags/mq/</link><description>Recent content in MQ on Hi, I'm Vimiix</description><generator>Hugo -- gohugo.io</generator><language>cn-zh</language><copyright>Copyright (c) 2017-2021, Vimiix Yao; All rights reserved</copyright><lastBuildDate>Wed, 11 Mar 2020 16:22:48 +0000</lastBuildDate><atom:link href="https://www.vimiix.com/tags/mq/index.xml" rel="self" type="application/rss+xml"/><item><title>beanstalkd消息队列</title><link>https://www.vimiix.com/posts/2020-03-11-beanstalkd-note/</link><pubDate>Wed, 11 Mar 2020 16:22:48 +0000</pubDate><guid>https://www.vimiix.com/posts/2020-03-11-beanstalkd-note/</guid><description>&lt;p>beanstalkd 是一个简单快速的分布式工作队列系统，协议基于 ASCII 编码运行在 tcp 上。其最初设计目的是通过后台异步执行耗时任务方式降低高容量 Web 应用的页面延时。而其简单、轻量、易用等特点，和对任务优先级、延时/超时重发等控制，以及&lt;a href="https://github.com/beanstalkd/beanstalkd/wiki/Client-Libraries">众多语言版本的客户端&lt;/a>的良好支持，使其可以很好的在各种需要队列系统的场景中应用。&lt;/p>
&lt;p>Beanstalk 的应用场景主要有：&lt;/p>
&lt;ul>
&lt;li>消息异步处理（消息队列的基本需求）&lt;/li>
&lt;li>消息延迟处理，实现循环队列&lt;/li>
&lt;/ul></description></item></channel></rss>