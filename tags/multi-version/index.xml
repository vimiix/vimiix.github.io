<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>multi-version on Hi, I'm Vimiix</title><link>https://www.vimiix.com/tags/multi-version/</link><description>Recent content in multi-version on Hi, I'm Vimiix</description><generator>Hugo -- gohugo.io</generator><language>cn-zh</language><copyright>Copyright (c) 2017-2021, Vimiix Yao; All rights reserved</copyright><lastBuildDate>Wed, 21 Jun 2023 14:50:48 +0000</lastBuildDate><atom:link href="https://www.vimiix.com/tags/multi-version/index.xml" rel="self" type="application/rss+xml"/><item><title>Shell 函数实现Go语言多版本管理轻量级方案</title><link>https://www.vimiix.com/posts/2023-06-21-manage-go-multiple-versions/</link><pubDate>Wed, 21 Jun 2023 14:50:48 +0000</pubDate><guid>https://www.vimiix.com/posts/2023-06-21-manage-go-multiple-versions/</guid><description>现有的工具方案 gvm: https://github.com/moovweb/gvm g: https://github.com/voidint/g 我的方案 优点：
原生：基于 go 语言本身支持多版本的能力实现，可以下载任何官方发布的版本 简单：shell 函数实现，直接集成到 bashrc 或 zshrc 中即可使用，无需额外配置 可定制化：代码简单可根据自身需求定制 代码实现 gist地址：https://gist.github.com/vimiix/0927fdfbea926e869a2c631db9eeae8b
####### GOLANG VERSION MANAGE FUNCTIONS ###### # ref: https://go.dev/doc/manage-install function goinstall() { echo &amp;#34;Downloading go$1...&amp;#34; go install golang.org/dl/go$1@latest &amp;amp;&amp;amp; go$1 download } function gouse() { gopath=$(go env GOPATH) if test -x ${gopath}/bin/go$1; then rm -f ${gopath}/bin/go echo &amp;#34;Relink go with go$1...&amp;#34; ln -s ${gopath}/bin/go$1 ${gopath}/bin/go echo &amp;#34;Done&amp;#34; else echo &amp;#34;Version $1not installed&amp;#34; fi } function golist() { current=$(go version | awk &amp;#39;{print $3}&amp;#39; | cut -c3-) for v in $(ls $(go env GOPATH)/bin | grep -E &amp;#39;go(\d.</description></item></channel></rss>