<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tlpi on Hi, I'm Vimiix</title><link>https://www.vimiix.com/tags/tlpi/</link><description>Recent content in tlpi on Hi, I'm Vimiix</description><generator>Hugo -- gohugo.io</generator><language>cn-zh</language><copyright>Copyright (c) 2017-2021, Vimiix Yao; All rights reserved</copyright><lastBuildDate>Fri, 18 May 2018 09:20:48 +0000</lastBuildDate><atom:link href="https://www.vimiix.com/tags/tlpi/index.xml" rel="self" type="application/rss+xml"/><item><title>TLPI笔记—深入文件I/O模型</title><link>https://www.vimiix.com/posts/2018-05-18-tpli-io-extend/</link><pubDate>Fri, 18 May 2018 09:20:48 +0000</pubDate><guid>https://www.vimiix.com/posts/2018-05-18-tpli-io-extend/</guid><description>&lt;h2 id="原子操作和竞争操作">原子操作和竞争操作&lt;/h2>
&lt;p>所有的系统调用都是以原子操作方式执行的。之所以这么说，是指内核保证了某系统调用中的所有步骤会作为地理操作而一次性加以执行，期间不会被其他进程或线程中断。原子性规避了&lt;strong>竞争状态（race condition）&lt;/strong>，竞争状态指：操作共享资源的两个进程（或线程）其结果取决于一个无法预期的顺序，即这些进程或线程获得 CPU 使用权的先后相对顺序。&lt;/p></description></item><item><title>TLPI笔记—通用文件I/O模型</title><link>https://www.vimiix.com/posts/2018-05-11-tpli-common-io/</link><pubDate>Fri, 11 May 2018 09:20:48 +0000</pubDate><guid>https://www.vimiix.com/posts/2018-05-11-tpli-common-io/</guid><description>&lt;h2 id="文件描述符">文件描述符&lt;/h2>
&lt;p>所有执行 I/O 操作的系统调用都是以文件描述符，一个非负整数来指代打开的文件。文件描述符用以表示所有类型的已打开的文件，包括管道（pipe）、FIFO、socket、终端、设备和普通文件。每个进程都各自独立维护着一张文件描述符表。&lt;/p>
&lt;h3 id="标准文件描述符">标准文件描述符&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">文件描述符&lt;/th>
&lt;th style="text-align:center">用途&lt;/th>
&lt;th style="text-align:center">POSIX 名称&lt;/th>
&lt;th style="text-align:center">stdio 流&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">0&lt;/td>
&lt;td style="text-align:center">标准输入&lt;/td>
&lt;td style="text-align:center">STDIN_FILENO&lt;/td>
&lt;td style="text-align:center">stdin&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">1&lt;/td>
&lt;td style="text-align:center">标准输出&lt;/td>
&lt;td style="text-align:center">STDOUT_FILENO&lt;/td>
&lt;td style="text-align:center">stdout&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">2&lt;/td>
&lt;td style="text-align:center">标准错误&lt;/td>
&lt;td style="text-align:center">STDERR_FILENO&lt;/td>
&lt;td style="text-align:center">stderr&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>TPLI笔记—linux/unix标准和历史</title><link>https://www.vimiix.com/posts/2018-05-01-linux-history/</link><pubDate>Tue, 01 May 2018 19:20:48 +0000</pubDate><guid>https://www.vimiix.com/posts/2018-05-01-linux-history/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近开始阅读&lt;a href="https://book.douban.com/subject/25809330/">《Linux/Unix 系统编程手册》&lt;/a> 这本书，重新系统的学习一下 linux 系统编程方面的知识。&lt;/p>
&lt;p>在阅读完第一章《历史和标准》以后，对于很多标准名词都见过，但是对于他们之间的发展历程很是模糊，通读这部分内容后豁然开朗，尤其本章最后总结部分，对于前面的概况的既简练还没有遗漏。不禁在书上用笔写下：&lt;strong>“牛 B 总结，一气呵成”&lt;/strong>。&lt;/p>
&lt;p>方便以后不去翻书回顾，特花点时间摘录至此。&lt;/p></description></item></channel></rss>